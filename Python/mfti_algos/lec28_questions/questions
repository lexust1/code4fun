## [Вопросы для устного ответа](http://judge.mipt.ru/mipt_cs_on_python3/labs/lab31.html#id4)

1. Индуктивные функции и однопроходные алгоритмы. (лекция №2)
2. Кеширование при рекурсии на примере чисел Фибоначчи. (лекция №3)
3. Дискретный алгоритм укладки рюкзака. (лекция №3)
4. Списки: односвязный, двусвязный, кольцо. Описать класс односвязного списка. (лекция №4)
5. Пирамида (куча). Пирамидальная сортировка. (лекция №5)
6. Двоичный поиск в массиве. (лекция №5)
7. Открытая хеш и закрытая хеш-таблицы. Проблема удаления из закрытой хеш-таблицы. Перехеширование. (лекция №6)
8. Словари и множества в Python. Пример применения ассоциативного массива. (лекция №7)
9. Определение графа. Степень вершины, петли, кратные рёбра. Изоморфизм. Цепи, пути и циклы. (лекция №9)
10. Сильная и слабая связность графа. Компоненты связности. (лекция №9)
11. Определение дерева. Свойства дерева. Остовное дерево графа. (лекция №9)
12. Способы представления графа в памяти: список рёбер, матрица смежности, списки смежности. (лекция №9)
13. Выделение компоненты связности обходом в глубину. (лекция №10)
14. Проверка двудольности графа. (лекция №10)
15. Проверка графа на ацикличность или нахождение цикла обходом в глубину. (лекция №10)
16. Алгоритм Косарайю выделения компонент сильной связности орграфа. (лекция №10)
17. Топологическая сортировка. Алгоритм Тарьяна.
18. Выделение компонент связности обходом в ширину. (лекция №11)
19. Нахождение кратчайшего цикла в невзвешенном графе. (лекция №11)
20. Алгоритм Дейкстры с очередью. (лекция №12)
21. Жадный алгоритм Дейкстры. (лекция №14)
22. Алгоритм Флойда-Уоршелла. (лекция №14)
23. Двоичное дерево поиска. Поиск и добавление элемента. (лекция №13)
24. Хранение двоичного дерева поиска в памяти ПК. (лекция №13)
25. Сбалансированное дерево поиска. Левое и правое малое и большое вращение. (лекция №13)
26. Эйлеров цикл и Гамильтонов цикл. Асимптотика построения. Построение гамильтонова цикла. (лекция №14)