# В левом верхнем углу доски размером N*M находится ферзь, который
# может двигаться только либо только вправо, либо только вниз.
# По диагонали двигать ферзя нельзя.
#
# Необходимо найти количество способов достичь клетки N*M, используя
# динамическое программирование.

def count_ways(n, m):
    """
    Вычисляет количество способов переместить ферзя из левого верхнего
    угла в правый нижний на доске размером n x m, двигаясь только
    вправо или вниз.

    Args:
    n (int): Количество строк на доске.
    m (int): Количество столбцов на доске.

    Returns:
    int: Количество способов достичь правого нижнего угла доски.
    """
    # Создаем двумерный массив с "нулевыми" границами
    arr = [[0] * (m + 1) for _ in range(n + 1)]
    # Инициализация начальной позиции
    arr[1][1] = 1
    # Вычисляем количество способов для каждой клетки
    for i in range(1, n + 1):
        for j in range(1, m + 1):
            # Пропускаем начальную клетку, так как она уже
            # инициализирована
            if i == j == 1:
                continue
            # Суммируем количество способов прийти из клетки сверху
            # и слева
            arr[i][j] = arr[i - 1][j] + arr[i][j - 1]
    # Возвращаем количество способов достичь правого нижнего угла
    return arr[n][m]


def main():
    print(count_ways(3, 4))
    print(count_ways(6, 6))


if __name__ == "__main__":
    main()
