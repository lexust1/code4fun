# Сдать решение задачи H-Скалярное произведение
#
# Одной из важнейших операций в линейной алгебре, аналитической
# геометрии, математическом анализе, анализе данных, искуственном
# интеллекте, компьютерной графике и в огромном количестве других
# областей математики и информатики является вычисление скалярного
# произведения двух векторов.
#
# Вычисляется скалярное произведение, как сумма произведений
# соответствующих компонент векторов.
#
# В данной задаче вам необходимо написать функцию
# dot_product(N, vector1, vector2) , вычисляющую скалярное произведение
# для двух заданных векторов одинаковой размерности N .
#
# Обратите внимание: в решении должно быть только объяевление одной
# функции dot_product и никакого другого кода.
#
# Аргументы функции
# Функция принимает в качестве аргументов размерность
# пространства N и 2 вектора. Гарантируется, что размерности векторов
# совпадают. Векторы заданы списками длины N .
#
# Возвращаемое значение
# Функция должна возвращать одно число -- скалярное произведение
# заданных векторов.
#
# Примеры
# >> print(dot_product(3, [1, 2, 3], [1, 2, 3])
# 14
# >> print(dot_product(3, [1, 2, 3], [4, 5, 6])
# 32
import numpy as np


def dot_product(N, vector1, vector2):
    """Calculates the dot product."""
    res = 0
    for idx in range(N):
        term = vector1[idx] * vector2[idx]
        res += term
    return res


def dot_product2(vector1, vector2):
    """Calculates the dot product (the pythonic way)."""
    return sum([x * y for x, y in zip(vector1, vector2)])


def dot_product3(vector1, vector2):
    """Calculates the dot product (the data scientist way)."""
    v1, v2 = np.array(vector1), np.array(vector2)
    return v1 @ v2
    # return np.dot(v1, v2)


def main():
    print(dot_product(3, [1, 2, 3], [1, 2, 3]))
    print(dot_product(3, [1, 2, 3], [4, 5, 6]))


if __name__ == "__main__":
    main()
