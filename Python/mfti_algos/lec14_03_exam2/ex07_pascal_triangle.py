# Сдать решение задачи G-Треугольник Паскаля
#
# По данному числу N выведите первые N+1 строку треугольника Паскаля.
#
# Формат входных данных
# Во входных данных содержится только число N (0 < N ≤ 100).
#
# Формат выходных данных
# Выведите N + 1 строку треугольника Паскаля. Числа в строке разделяйте
# одним пробелом.
#
# Примеры
# Ввод	Вывод
# 1         1
#           1 1
#
#
# Ввод	Вывод
# 4       1
#         1 1
#         1 2 1
#         1 3 3 1
#         1 4 6 4 1
#
def print_pascals_triangle(n):
    """
    Выводит первые n+1 строк треугольника Паскаля.

    Args:
    - n (int): Число, указывающее количество строк треугольника Паскаля
        для вывода.

    Returns:
    None
    """
    # Создаем двумерный список (список списков), где каждый подсписок
    # представляет собой строку треугольника Паскаля.
    # Для каждой строки i создаем список длиной i + 1, заполненный единицами.
    triangle = [[1] * (i + 1) for i in range(n + 1)]
    # Начинаем заполнять треугольник, начиная со второй строки (i = 2),
    # так как первая строка всегда содержит только одну единицу.
    for i in range(2, n + 1):
        # В каждой строке обходим все элементы, начиная со второго и
        # заканчивая предпоследним (j = 1 до i - 1).
        for j in range(1, i):
            # Каждый элемент (кроме первого и последнего в строке)
            # равен сумме двух элементов над ним из предыдущей строки.
            # Элемент [i][j] равен сумме элементов [i - 1][j - 1] и [i - 1][j].
            triangle[i][j] = triangle[i - 1][j - 1] + triangle[i - 1][j]
    # Выводим треугольник Паскаля.
    # Для каждой строки в треугольнике преобразуем числа в строки и
    # объединяем их в одну строку с разделителем в виде пробела.
    for row in triangle:
        print(" ".join(map(str, row)))


def main():
    print_pascals_triangle(5)


if __name__ == "__main__":
    main()
